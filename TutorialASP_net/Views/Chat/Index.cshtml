@model TutorialASP_net.Models.MensajesChat
@{
    Layout = "~/Views/Shared/_ChatLayout.cshtml";
}

<div class="fixed-top navChat bg-light">
    <ul class="nav">
        <li class="nav-item">
            <a class="nav-link btn" href="/Home/"><i class="fa-solid fa-house"></i></a>
            
        </li>
    </ul>
    
</div>
<div class="row">
    <div class="col-4 bg-light inboxChat" id="inboxChat">
        <div class="headind_srch">
            <div class="srch_bar">
                <div class="stylish-input-group">
                    <input type="text" class="search_bar" placeholder="Search">
                    <span class="input-group-addon">
                        <button type="button"> <i class="fa fa-search" aria-hidden="true"></i> </button>
                    </span>
                </div>
            </div>
        </div>
        <form id="formChatSelected" action="" method="post">
            <input type="hidden" id="ChatSelect" value="0" />
            <input type="hidden" id="LastChatSelect" value="0" />
        </form>
        @foreach (var item in ViewBag.inboxList)
        {
            <div class="chat_list" onclick="LoadChat(@item.idroom)">

                <div class="chat_people">
                    <div class="chat_img"> <img class="img-fluid" src="@item.photoChat" alt="sunil"> </div>
                    <div class="chat_ib">
                        <h6>@item.roomname</h6><p><b><span class="chat_date">@item.lastMsgDate</span></b></p>
                        <p>
                            <b>@item.usernameLastMsg: </b>@if (item.msgType == 1)
                            {@item.lastMsg}
                        else if (item.msgType == 2)
                        {
                        <p>Stiker</p>}
                            </p>
                        </div>
                    </div>

                </div>
            }
    </div>

    <div class="col-8 bg-light" id="chatRoomBox">
        <!--Lista de mensajes-->
        <h5 style="padding-top:50%">Selecciona un chat</h5>
    </div>

</div>


<div class="modal fade" id="modalFilesUpload" tabindex="-1" aria-labelledby="modalFilesUploadLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalFilesUploadLabel">Sube tus archivos aqui</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form id="formArchivos">
                <div class="modal-body" id="cajaArchivos">

                    <div style="border:solid black;">
                        <section id="multi-selector-uniq">
                            @*@Html.TextBoxFor(m => m.files, new { @type = "file", @accept = "image/*",@multiple=true})*@
                            <input id="files" name="files" type="file" accept="image/*" multiple>
                            <ul id="preview" class="list-group"></ul>
                        </section>
                    </div>


                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-success">Subir Archivos</button>
                </div>
            </form>
        </div>
    </div>
</div>


<div class="contenedorBtnUpload" id="UploadFilesAlert" style="display:none">
    @*style="display:none"*@
    <button class="botonF1">
        <span class="spanBtn"><img class="img-fluid" src="~/static/img/upload.gif" /></span>
    </button>
    

</div>



<div class="modal fade" id="modalStikers" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-dialog-scrollable modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Stikers</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <div class="row">
                        @if (ViewBag.stikers != null)
                        {
                            foreach (var item in ViewBag.stikers)
                            {
                                <div class="col-md-4">
                                    <a class="btn" style="background:purple;" onclick="SendStiker('@item.ruta',2)">
                                        <img class="img-fluid" src="@item.ruta" />
                                    </a>


                                </div>
                            }

                        }
                        else
                        {
                            <h5 class="modal-title" id="exampleModalLabel">No tienes Stikers</h5>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="displayname" value="@Session["username"]" />
<input type="hidden" id="profileChatImg" value="@Session["photo"]" />
@section scripts{
    <script src="~/Scripts/inputdinamico.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.2.js"></script>
    <script src="/signalr/hubs"></script>
    <script type="text/javascript">
        var lastMsgView = 0
        var lasMsgOnRoom = 0
        var scrollPos = 0
        document.getElementById("inboxChat").addEventListener("scroll", () => {
            console.log("sfdas")
        })
        function scrollMessages() {
            document.getElementById("messageBox").addEventListener("scroll", () => {
                for (var i = lastMsgView; i <= lasMsgOnRoom; i++) {

                    var elem = document.getElementById('msg_' + i);

                    if (elem)
                    {
                        var clientRect = elem.getBoundingClientRect();
                        if (clientRect.top > window.innerHeight) {
                            lastMsgView = i
                            break;
                        }
                    }
                }
                //scrollPos = (document.body.getBoundingClientRect()).top;
            })
        }
        window.addEventListener("load", function () {
            //console.log("ss")
        })

        function LoadChat(idChat) {
            var lastChat = document.getElementById("LastChatSelect").value = document.getElementById("ChatSelect").value
            var nameUser = document.getElementById("displayname").value
            if (document.getElementById("listIdMsgNoView")) {
                var arregloIds = document.getElementById("listIdMsgNoView").value.split(",")

                arregloIds.forEach(id => {
                    var element = document.querySelector('#msg_' + id);
                    if (element) {
                        var observer = new IntersectionObserver(callback, {});
                        observer.observe(element);
                    }
                })
                
                
            }
            $.ajax({
                type: "POST",
                url: "/Chat/ChatPartial?idroom=" + idChat,
                success: (response) => {
                    
                    
                    document.getElementById("chatRoomBox").innerHTML = response
                    if (document.getElementById("beginchat"))
                    {
                        document.getElementById("beginchat").scrollIntoView({ block: "center" })
                    }
                    chat.server.removeFromGroup(lastChat, nameUser, lastMsgView);
                    lastMsgView = document.getElementById("lastMsgId").value
                    lasMsgOnRoom = document.getElementById("lastMsgOnRoom").value
                    //for (var i = lastMsgView; i <= lasMsgOnRoom; i++) {
                    //    console.log(i)
                    //    //c = parseInt(i)
                    //    var elem = document.getElementById('msg_' + i);
                    //    if (elem)
                    //    {
                    //        console.log(i)
                    //        var clientRect = elem.getBoundingClientRect();

                    //        if (clientRect.top > window.innerHeight) {

                    //            lastMsgView = i
                    //            break;
                    //        }
                    //    }
                    //}
                                     
           
                    //scrollMessages()
                    
                    document.getElementById("ChatSelect").value = idChat
                    //debugger;
                    console.log(lastMsgView + "ppp")
                    
                    chat.server.addToGroup(idChat, nameUser)
                    $("#txtMessage").focus()

                }
            })

        }

        function callback(entries, observer) {
            if (entries[0].isIntersecting) {//verificamos si actualmente es visible
                lastMsgView = entries[0].target.id.split("_")[1]
                console.log(lastMsgView)
            } else {
                
            }
        }

        function sendMsg() {
            if ($("#txtMessage").val() != '') {
                var nameOwner = $("#displayname").val()
                var messageText = $("#txtMessage").val()
                var profileChatImg = $("#profileChatImg").val()
                var groupName = document.getElementById("ChatSelect").value
                chat.server.send(groupName, nameOwner, messageText, profileChatImg,1)
                $("#txtMessage").val("").focus()
                document.getElementById("btnSendMessage").classList.add("disabled")
                document.getElementById("NumCaracteres").innerHTML = "250/250"
            }

        }

        function SendStiker(ruta)
        {
            var nameOwner = $("#displayname").val()
            var profileChatImg = $("#profileChatImg").val()
            var groupName = document.getElementById("ChatSelect").value
            chat.server.send(groupName, nameOwner, ruta, profileChatImg, 2)
        }

        $.connection.hub.start().done(function () {

            window.addEventListener('unload', () => {
                var arregloIds = document.getElementById("listIdMsgNoView").value.split(",")
                arregloIds.forEach(id => {
                    var element = document.querySelector('#msg_' + id);
                    if (element) {
                        var observer = new IntersectionObserver(callback, {});
                        observer.observe(element);

                    }
                })
                var nameOwner = $("#displayname").val();
                chat.server.removeFromGroup(document.getElementById("ChatSelect").value, nameOwner, lastMsgView);
            }, false);

        })

        var chat = $.connection.chatHub;
        chat.client.sendChat = function (idmsg,name, message, profileChatImg,msgType) {
            var divName = $("<div />").text(name).html();
            var divMessage = $("<div />").text(message).html();
            var mensajenuevo = "";
            if (name == $("#displayname").val())
            {
                switch (msgType)
                {
                    case 1:
                        mensajenuevo = "<div class='outgoing_msg'  id='msg_" + idmsg + "'>" +
                                            "<div class='sent_msg'>"+
                                                "<p>"+
                                                    message+
                                                "</p>"+
                                                    "<span class='time_date'> @DateTime.Now</span>"+
                                            "</div>"+
                                    "</div>"
                        break
                    case 2:
                        mensajenuevo = "<div class='outgoing_msg'  id='msg_" + idmsg + "'>"+
                                            "<div class='sent_msg'>" +
                                                "<img class='img-fluid' src='" + message + "' />" +
                                                    "<span class='time_date'> @DateTime.Now</span>"+
                                            "</div>"+
                                    "</div>"
                        break
                    case 3:
                        mensajenuevo = "<div class='outgoing_msg'  id='msg_" + idmsg + "'>"+
                                            "<div class='sent_msg'>" +
                                                "<img class='img-fluid' src='" + message + "' />" +
                                                    "<span class='time_date'> @DateTime.Now</span>"+
                                            "</div>"+
                                    "</div>"
                        break
                }
                lastMsgView = idmsg
                document.getElementById("messageBox").innerHTML += mensajenuevo
                if (document.getElementById("msg_" + idmsg)) {
                    document.getElementById("msg_" + idmsg).scrollIntoView({ block: "center" })
                }

            }
            else {

                switch (msgType)
                {
                    case 1:
                        mensajenuevo = '<div class="incoming_msg">' +
                                            '<div class="incoming_msg_img"> <img style="width: 50%;" src="'+profileChatImg+'" alt="sunil"> </div>' +
                                                '<div class="received_msg">'+
                                                    '<div class="received_withd_msg">'+
                                                        '<p>'+
                                                            '<div class="col-md-12 username">'+
                                                                    name+
                                                            '</div>'+
                                                            '<div class="col-md-12 message">'+message+'</div>'+
                                                            '</p>'+
                                                        '<span class="time_date"> @DateTime.Now</span>'+
                                                    '</div>'+
                                                '</div>'+
                                        '</div>'
                        break
                    case 2:
                        mensajenuevo = '<div class="incoming_msg">' +
                                            '<div class="incoming_msg_img"> <img style="width: 50%;" src="'+profileChatImg+'" alt="sunil"> </div>' +
                                                '<div class="received_msg">'+
                                                    '<div class="received_withd_msg">'+
                                                            '<div class="col-md-6 username">'+
                                                                    name+
                                                            '</div>'+
                                                                 '<div class="col-md-6 message"><img class="img-fluid" src="' + message + '" /></div>'+
                                                        '<span class="time_date"> @DateTime.Now</span>'+
                                                    '</div>'+
                                                '</div>'+
                                        '</div>'
                        break
                    case 3:
                        mensajenuevo = '<div class="incoming_msg">' +
                                            '<div class="incoming_msg_img"> <img style="width: 50%;" src="'+profileChatImg+'" alt="sunil"> </div>' +
                                                '<div class="received_msg">'+
                                                    '<div class="received_withd_msg">'+
                                                            '<div class="col-md-6 username">'+
                                                                    name+
                                                            '</div>'+
                                                                 '<div class="col-md-6 message"><img class="img-fluid" src="' + message + '" /></div>'+
                                                        '<span class="time_date"> @DateTime.Now</span>'+
                                                    '</div>'+
                                                '</div>'+
                                        '</div>'
                        break
                }
                document.getElementById("messageBox").innerHTML += mensajenuevo
            }

        }

        function evalMessage()
        {
            var mensaje = $("#txtMessage").val()
            if (mensaje == '') {
                document.getElementById("btnSendMessage").classList.add("disabled")
            }
            else {
                var noValido = /[A-Za-z0-9]+/;

                if (noValido.test(mensaje)) {
                    document.getElementById("btnSendMessage").classList.remove("disabled")
                } else {
                    $("#txtMessage").val("").focus()
                    mensaje = $("#txtMessage").val()

                }


            }
            var caractrest = 250 - mensaje.length
            document.getElementById("NumCaracteres").innerHTML = caractrest + "/250"

        }

        //drag and drop
        function dragOverHandler(event)
        {
            // Prevent default behavior (Prevent file from being opened)
            event.preventDefault();
            $('#modalFilesUpload').modal('show')
        }
        $('#modalFilesUpload').on('hidden.bs.modal', function (event) {
            document.getElementById("formArchivos").reset()
            filesList = []
            document.getElementById("preview").innerHTML = ''
        })

        document.getElementById("formArchivos").addEventListener("submit", (event) => {
            event.preventDefault()
            var data = document.getElementById("formArchivos")
            data = new FormData(data)
            
            document.getElementById("UploadFilesAlert").style.display=''
            $("#modalFilesUpload").modal('hide')
            fetch('@Url.Action("SubirArchivos","Chat")', {
                body: data,
                method:"POST"
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success)
                    {
                        console.log(data.listaArchivos)
                        for (var i = 0; i < data.listaArchivos.length; i++) {
                            var nameOwner = $("#displayname").val()
                            var profileChatImg = $("#profileChatImg").val()
                            var groupName = document.getElementById("ChatSelect").value
                            chat.server.send(groupName, nameOwner, data.listaArchivos[i], profileChatImg, 3)
                        }
                        document.getElementById("UploadFilesAlert").style.display = 'none'
                        //setTimeout(() => {


                        //}, 5000)

                    }
                })
        })



    </script>
}


